version: '3.8'

services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - internal

  auth-service:
    image: postgres:latest
    container_name: auth-service-db
    ports:
      - "5000:5432"
    environment:
      POSTGRES_DB: health_pro
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    volumes:
      - auth-service-db:/var/lib/postgresql/data
    networks:
      - internal

  clinic-service:
    image: postgres:latest
    container_name: clinic-service-db
    ports:
      - "5001:5432"
    environment:
      POSTGRES_DB: health_pro
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    volumes:
      - clinic-service-db:/var/lib/postgresql/data
    networks:
      - internal

  schedule-service:
    image: postgres:latest
    container_name: schedule-service
    ports:
      - "5002:5432"
    environment:
      POSTGRES_DB: health_pro
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    volumes:
      - schedule-service:/var/lib/postgresql/data
    networks:
      - internal

volumes:
  clinic-service-db:
  auth-service-db:
  schedule-service:
  kafka-data:
    driver: local

networks:
  internal:
    driver: bridge